{"version":3,"sources":["components/map.js","components/listItem.js","components/listOfVenues.js","components/sideDrawer.js","components/toggleButton.js","API/index.js","App.js","serviceWorker.js","index.js"],"names":["MyMapComponent","withScriptjs","withGoogleMap","props","react_default","a","createElement","lib","defaultZoom","zoom","defaultCenter","lat","lng","center","markers","filter","marker","isVisible","map","index","arr","venueInfo","venues","find","venue","id","bestPhoto","key","position","onClick","onMarkerClick","animation","length","google","maps","Animation","BOUNCE","DROP","isOpen","Fragment","name","src","concat","prefix","suffix","alt","location","formattedAddress","contact","formattedPhone","Map","window","gm_authFailure","alert","Object","assign","role","aria-label","this","googleMapURL","loadingElement","style","height","containerElement","className","width","mapElement","Component","ListItem","_this","onListClick","ListOfVenues","listItem","sideDrawerOpen","sideDrawerToggle","SideDrawer","state","query","filterVenues","trim","toLowerCase","includes","venueFilterChange","evt","setState","target","value","matched","upDateState","sideDrawerVisible","htmlFor","tabIndex","type","onChange","listOfVenues","ToggleButton","handleMouseClick","Utills","keys","client_id","client_secret","v","limit","join","urlPrams","Accept","endPoint","method","dataToFetch","headers","fetch","mainURL","auth","urlLink","then","res","json","catch","error","console","log","FourSquareAPI","simpleFetch","VENUE_ID","App","stateObject","stopPropagation","prevState","closeMarkers","venuesDetails","clickedVenue","response","_this2","search","near","radius","geocode","feature","geometry","toggleButton","sideDrawer","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","render","src_App_0","document","getElementById","URL","process","href","origin","addEventListener","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.6c106753.chunk.js","sourcesContent":["/*global google*/\r\nimport React, { Component } from 'react';\r\nimport { withScriptjs, withGoogleMap, GoogleMap, Marker,InfoWindow } from \"react-google-maps\";\r\n\r\n// withScriptjs, is used to avoid puting a <script/> tag for Google Maps JavaScript API v3 in the HTML's <head/> element.\r\nconst MyMapComponent = withScriptjs(withGoogleMap((props) =>\r\n\t\t<GoogleMap\r\n\t\t    defaultZoom={10}\r\n\t\t    zoom = {props.zoom}\r\n\t\t    defaultCenter={{ lat: 39.050739, lng: -77.487425 }}\r\n\t\t    center={props.center}\r\n\t\t>\r\n    \t\t{\r\n    \t\t\tprops.markers && props.markers\r\n\t    \t\t\t.filter(marker => marker.isVisible)\r\n\t    \t\t\t.map((marker,index,arr) => {\r\n\t    \t\t\t\tlet venueInfo = props.venues.find(venue => venue.id === marker.id);\r\n\t    \t\t\t\tif(venueInfo.bestPhoto) {\r\n\t\t    \t\t\t\treturn (\r\n\t\t    \t\t\t\t\t<Marker\r\n\t\t\t    \t\t\t\t\tkey={index}\r\n\t\t\t    \t\t\t\t\tposition={{ lat: marker.lat, lng: marker.lng }}\r\n\t\t\t    \t\t\t\t\tonClick={ () => props.onMarkerClick(marker) }\r\n\t\t\t    \t\t\t\t\tanimation={arr.length === 1 ? google.maps.Animation.BOUNCE : google.maps.Animation.DROP}\r\n\t\t    \t\t\t\t\t>\r\n\r\n\t\t    \t\t\t\t\t\t{ marker.isOpen  && venueInfo.bestPhoto && (\r\n\t\t\t\t    \t\t\t\t\t<InfoWindow>\r\n\t\t\t\t    \t\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t    \t\t\t\t\t\t\t<h2>{venueInfo.name}</h2>\r\n\t\t\t\t    \t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsrc={`${venueInfo.bestPhoto.prefix}160x160${\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvenueInfo.bestPhoto.suffix}`}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\talt={\"venue details\"}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<h6>Image Source: Fouresquare API</h6>\r\n\t\t\t\t    \t\t\t\t\t\t\t<h4>Address: {venueInfo.location.formattedAddress}</h4>\r\n\t\t\t\t    \t\t\t\t\t\t\t<h4>Phone: {venueInfo.contact.formattedPhone}</h4>\r\n\t\t\t\t    \t\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t    \t\t\t\t\t</InfoWindow>\r\n\t\t\t\t\t    \t\t\t\t)}\r\n\t\t\t    \t\t\t\t</Marker>\r\n\t    \t\t\t\t\t)\r\n\t\t\t\t    \t}else{\r\n\t\t\t\t    \t\treturn (\r\n\t\t\t\t\t    \t\t\t<Marker\r\n\t\t\t\t    \t\t\t\t\tkey={index}\r\n\t\t\t\t    \t\t\t\t\tposition={{ lat: marker.lat, lng: marker.lng }}\r\n\t\t\t\t    \t\t\t\t\tonClick={ () => props.onMarkerClick(marker) }\r\n\t\t\t\t    \t\t\t\t\tanimation={arr.length === 1 ? google.maps.Animation.BOUNCE : google.maps.Animation.DROP}\r\n\t\t\t    \t\t\t\t\t>\r\n\r\n\r\n\t\t\t\t\t    \t\t\t\t{marker.isOpen  && venueInfo && (\r\n\t\t\t\t\t    \t\t\t\t\t<InfoWindow>\r\n\t\t\t\t\t    \t\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t    \t\t\t\t\t\t\t<h2>{venueInfo.name}</h2>\r\n\t\t\t\t\t    \t\t\t\t\t\t\t<h5>\"Sorry photo details isn't available now\"</h5>\r\n\t\t\t\t\t    \t\t\t\t\t\t\t<h4>Address: {venueInfo.location.formattedAddress}</h4>\r\n\t\t\t\t\t    \t\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t\t    \t\t\t\t\t</InfoWindow>\r\n\t\t\t\t\t\t    \t\t\t\t)}\r\n\t\t\t\t    \t\t\t\t</Marker>\r\n\t    \t\t\t\t\t)\r\n\t\t\t\t    \t}\r\n\t    \t\t})\r\n    \t\t}\r\n  \t\t</GoogleMap>\r\n))\r\n\r\nclass Map extends Component {\r\n\r\n\trender() {\r\n\t\twindow.gm_authFailure = () => {alert(\"Error authenticating with the Google Maps API...please check your API key!\")};\r\n\t\treturn (\r\n\t\t\t\t<MyMapComponent\r\n\t\t\t\t  role=\"application\"\r\n\t\t\t\t  aria-label=\"map\"\r\n\t\t\t\t  {...this.props}\r\n\t\t\t\t  googleMapURL=\"https://maps.googleapis.com/maps/api/js?v=3.exp&key=AIzaSyDjc17HMSVSoBHZFmeEZliKYQO28zFuwpY&callback=initMap\"\r\n\t\t\t\t  loadingElement={<div style={{ height: `100%` }} />}\r\n\t\t\t\t  containerElement={<div className=\"map\"  style={{ height: `100%`, width: `100%` }} />}\r\n\t\t\t\t  mapElement={<div style={{ height: `100%` }} />} \r\n\t\t\t\t/>\r\n\t\t\t);\r\n\t}\r\n\r\n}\r\nexport default Map;\r\n","import React, { Component } from 'react';\r\n\r\n\r\nclass ListItem extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t  <li className=\"list-item\">\r\n\t\t    <button className=\"list-item-btn\" onClick={() => this.props.onListClick(this.props)}>\r\n\t\t    \t{this.props.name}\r\n\t\t    </button>\r\n\t\t </li>\r\n\t  );\r\n   }\r\n}\r\nexport default ListItem;\r\n","import React, { Component } from 'react';\r\nimport ListItem from './listItem';\r\n\r\nclass ListOfVenues extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t  <ol className=\"venue-list\" >\r\n\t\t  \t{this.props.venues &&\r\n\t\t\t\t\tthis.props.venues.length > 0 &&\r\n\t\t\t\t\tthis.props.venues\r\n\t\t\t\t\t.map((venue, index) => (\r\n\t\t\t\t\t  <ListItem key={index} {...venue} \r\n\t\t\t\t\t  onListClick={this.props.onListClick}\r\n\t\t\t\t\t  sideDrawerOpen={this.props.sideDrawerToggle}\r\n\t\t\t\t\t  />\r\n\t\t\t\t\t))\r\n\t\t\t}\r\n\t\t  </ol>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default ListOfVenues;","import React, { Component } from 'react';\r\nimport ListOfVenues from './listOfVenues';\r\n\r\n\r\nclass SideDrawer extends Component {\r\n\r\n\tstate = {\r\n\t\tquery: \"\",\r\n\t\tvenues: []\r\n\t}\r\n\r\n\t// A method to filter the hotel list.\r\n\tfilterVenues = () => {\r\n\t\tif (this.state.query.trim() !== \"\") {\r\n\t\t\tconst venues = this.props.venues.filter(venue => \r\n\t\t\t\tvenue.name.toLowerCase().includes(this.state.query.toLowerCase())\r\n\t\t\t);\r\n\t\t\treturn venues;\r\n\t\t}\r\n\t\treturn this.props.venues;\r\n\t}\r\n\r\n\t// A method to listen to change in the hotel list.\r\n\tvenueFilterChange = evt => {\r\n\t\tthis.setState({query: evt.target.value});\r\n\t\tconst markers = this.props.venues.map(venue => {\r\n\t\t\tconst matched = venue.name.toLowerCase().includes(evt.target.value.toLowerCase());\r\n\t\t\tconst marker = this.props.markers.find(marker => marker.id === venue.id);\r\n\t\t\tif(matched) {\r\n\t\t\t\tmarker.isVisible = true;\r\n\t\t\t}else {\r\n\t\t\t\tmarker.isVisible = false;\r\n\t\t\t}\r\n\t\t\treturn marker;\r\n\t\t});\r\n\t\tthis.props.upDateState({markers})\r\n\t}\r\n\r\n\trender() {\r\n\t\tlet sideDrawerVisible = \"hide\"\r\n\t\tif (this.props.sideDrawerOpen) {\r\n\t\t\tsideDrawerVisible = \"show\"\r\n\t\t}\r\n\t\treturn (\r\n\t\t\t<div id=\"side-drawer\" className={sideDrawerVisible}>\r\n\t\t\t\t<label className=\"text-label\" htmlFor=\"search\" tabIndex=\"0\">Filter Hotels :</label>\r\n\t\t\t\t<input type={\"search\"} id={\"search\"} value={this.props.query} onChange={this.venueFilterChange} />\r\n\t\t\t\t<ListOfVenues \r\n\t\t\t\t\t{...this.props}\r\n\t\t\t\t\tonListClick={this.props.onListClick}\r\n\t\t\t\t\tvenues={this.filterVenues()}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\nexport default SideDrawer;","import React, { Component } from 'react';\r\n\r\n\r\nclass ToggleButton extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div tabIndex=\"0\">\r\n\t\t\t\t<button className=\"toggle-button\" onClick={this.props.handleMouseClick}>\r\n\t\t\t\t\t<div className=\"toggle-button-line\" />\r\n\t\t\t\t\t<div className=\"toggle-button-line\" />\r\n\t\t\t\t\t<div className=\"toggle-button-line\" />\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t  );\r\n   }\r\n}\r\nexport default ToggleButton;","\r\n/**** Reference from  FEND Forest Walker walk thourgh!!****/\r\n\r\n// A utility class for fetching third party data.\r\nclass Utills {\r\n\t// A method for base url to fetch third party data.\r\n\tstatic mainURL () {\r\n\t\treturn \"https://api.foursquare.com/v2\"\r\n\t}\r\n\r\n\t// A method for client credentials to fetch third party data.\r\n\tstatic auth () {\r\n\t\tconst keys = {\r\n\t\t\tclient_id: \"FEHQ14G5KWJUIZKYZPIVYNKDUFWS5S4GP0SUSASGVWOHG4AG\",\r\n\t\t\tclient_secret: \"SPEAHCTDA14IULG1C2OOJCQLUFU5T45DZ1M1IGSQ1I2PO1GY\",\r\n\t\t\tv: \"20182212\",\r\n\t\t\tlimit: 10\r\n\t\t};\r\n\t\treturn Object.keys(keys).map(key =>`${key}=${keys[key]}`).join(\"&\");\r\n\t}\r\n\r\n\t// A method for specific url to fetch third party data.\r\n\tstatic urlLink (urlPrams) {\r\n\t\tif(!urlPrams) {\r\n\t\t\treturn \"\";\r\n\t\t}\r\n\t\treturn Object.keys(urlPrams).map(key => `${key}=${urlPrams[key]}`).join(\"&\");\r\n\t}\r\n\r\n\t// A method for the third party data headers.\r\n\tstatic headers() {\r\n\t\treturn {Accept: \"application/json\"};\r\n\t}\r\n\r\n\t// A method for fetching third party data.\r\n\tstatic simpleFetch(endPoint,method,urlPrams) {\r\n\t\tlet dataToFetch = {\r\n\t\t\tmethod,\r\n\t\t\theaders: Utills.headers()\r\n\t\t};\r\n\t\treturn fetch(\r\n\t\t\t`${Utills.mainURL()}${endPoint}?${Utills.auth()}&${Utills.urlLink(\r\n\t\t\turlPrams)}`, dataToFetch\r\n\t\t).then(\r\n\t\t\tres => res.json()\r\n\t\t)\r\n\t\t.catch(error => {\r\n\t\t\talert(\"Error, while fetching data from Foursquare API... Sorry!\");\r\n\t\t\tconsole.log(\"Error trying to get hotels venues!\")\r\n\t\t});\r\n\r\n\t}\r\n}\r\n\r\n// A utility class for fetching third party data.\r\nclass FourSquareAPI {\r\n\tstatic search(urlPrams) {\r\n\t\treturn Utills.simpleFetch(\"/venues/search\",\"GET\",urlPrams);\r\n\t}\r\n\tstatic venuesDetails(VENUE_ID) {\r\n\t\treturn Utills.simpleFetch(`/venues/${VENUE_ID}`,\"GET\");\r\n\t}\r\n\tstatic venuesPhotos(VENUE_ID) {\r\n\t\treturn Utills.simpleFetch(`/venues/${VENUE_ID}/photos`,\"GET\");\r\n\t}\r\n}\r\nexport default FourSquareAPI;","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport Map from \"./components/map\";\r\nimport SideDrawer from \"./components/sideDrawer\";\r\nimport ToggleButton from \"./components/toggleButton\";\r\nimport FourSquareAPI from \"./API\"\r\n\r\nclass App extends Component {\r\n\r\n// App state data.\r\n  state = {\r\n    venues: [],\r\n    markers: [],\r\n    center: [],\r\n    zoom: 13,\r\n    sideDrawerOpen: false,\r\n    upDateState: stateObject => {\r\n      this.setState(stateObject);\r\n    }\r\n  }\r\n\r\n  // A function to listen to click events on the toggle hamburger button.\r\n  handleMouseClick = (evt) => {\r\n    this.sideDrawerToggle();\r\n    evt.stopPropagation();\r\n  }\r\n\r\n  // A function to toggle the side bar.\r\n  sideDrawerToggle = () => {\r\n    // To gruntee state change,I will pass in the previous state as an argument into a function.\r\n    this.setState((prevState) => {\r\n      return {sideDrawerOpen: !this.state.sideDrawerOpen}\r\n    });\r\n  }\r\n\r\n  // A function to close a marker when another is open.\r\n  closeMarkers = () => {\r\n    const markers = this.state.markers.map(marker => {\r\n      marker.isOpen = false;\r\n      return marker;\r\n  });\r\n    this.setState({markers: Object.assign(this.state.markers, markers)})\r\n  }\r\n\r\n  // A function to open a marker.\r\n  onMarkerClick = marker => {\r\n    this.closeMarkers();\r\n    marker.isOpen = true;\r\n    this.setState({markers: Object.assign(this.state.markers, marker)})\r\n\r\n    const venue = this.state.venues.find(venue => venue.id === marker.id);\r\n    FourSquareAPI.venuesDetails(marker.id).then(res => {\r\n      const clickedVenue = Object.assign(venue, res.response.venue);\r\n      this.setState({venues: Object.assign(this.state.venues, clickedVenue)});\r\n      console.log(res);\r\n    });\r\n  }\r\n\r\n  // A function to open a marker via marker's list name.\r\n  onListClick = venue => {\r\n    const marker = this.state.markers.find(marker => marker.id === venue.id);\r\n    this.onMarkerClick(marker);\r\n  }\r\n\r\n  // A method called,after the markup is set on the page, to fetch data from Foursquare API.\r\n  componentDidMount() {\r\n    FourSquareAPI.search({\r\n      query: \"hotel\",\r\n      near: \"Ashburn,VA\",\r\n      radius: 5000\r\n    })\r\n    .then(res => {\r\n      const {venues} = res.response;\r\n      const {center} = res.response.geocode.feature.geometry;\r\n      const markers = venues.map(venue => {\r\n        return {\r\n          lat: venue.location.lat,\r\n          lng: venue.location.lng,\r\n          isOpen: false,\r\n          isVisible: true,\r\n          id: venue.id\r\n        };\r\n      });\r\n      this.setState({venues,center,markers})\r\n      console.log(res);\r\n    });\r\n  }\r\n\r\n  // A method to return a JSX with the app data.\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n\r\n        <nav className=\"App-header\" tabIndex=\"0\">\r\n          <h4 tabIndex=\"0\">Ashburn Hotels Locator</h4>\r\n          <ToggleButton \r\n            handleMouseClick={this.handleMouseClick}\r\n          />\r\n        </nav>\r\n\r\n        <section className=\"App-side-drawer\">\r\n          <SideDrawer\r\n            {...this.state}\r\n            markers={this.state.markers}\r\n            onListClick={this.onListClick}\r\n            upDateState={this.state.upDateState}\r\n            handleMouseClick={this.handleMouseClick}\r\n            sideDrawerOpen={this.state.sideDrawerOpen}\r\n          />\r\n        </section>\r\n\r\n        <main className=\"App-main\">\r\n          <Map \r\n              {...this.state} \r\n              onMarkerClick = {this.onMarkerClick}\r\n              handleMouseClick={this.handleMouseClick}\r\n              sideDrawerOpen={this.state.sideDrawerOpen}\r\n          />\r\n        </main>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}